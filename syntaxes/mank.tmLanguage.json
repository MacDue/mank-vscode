{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Mank",
	"patterns": [
		{
			"include": "#keywords"
		},
		{
			"include": "#strings"
    },
    {
      "include": "#primitives"
    },
    {
      "include": "#numeric-literals"
    },
    {
      "include": "#function-declaration"
    },
    {
      "include": "#pod-declaration"
    },
    {
      "include": "#comments"
    },
    {
      "include": "#call"
    },
    {
      "include": "#custom-types"
    },
    {
      "include": "#misc-ident"
    },
    {
      "include": "#lambda-types"
    },
    {
      "include": "#lambda"
    }
	],
	"repository": {
		"strings": {
			"name": "string.quoted.double.mank",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.mank",
					"match": "\\\\."
				}
			]
    },
    "function-param-list": {
      "begin": "\\(",
      "end": "\\)",
      "patterns": [
				{
          "include": "#custom-types"
        },
        {
          "include": "#lambda-types"
        },
        {
          "include": "#misc-ident"
        },
        {
          "include": "#comments"
        },
        {
          "include": "#strings"
        },
        {
          "include": "#numeric-literals"
        }
      ]
    },
    "blocks": {
      "begin": "\\{",
      "end": "\\{",
      "patterns": [
        { "include": "#blocks" }
      ]
    },
		"function-declaration": {
      "begin": "\\b(fun|proc)\\s+([_$[:alpha:]][_$[:alnum:]]*)",
      "beginCaptures": {
        "1": { "name": "constant.language.symbol-type.mank" },
        "2": { "name": "meta.definition.function.js entity.name.function.js" },
        "3": { "name": "constant.language.mank" },
        "4": { "name": "support.type.mank" }
      },
      "end": "\\{",
      "patterns": [
				{
          "include": "#function-param-list"
        },
        {
          "include": "#custom-types"
        },
        {
          "include": "#lambda-types"
        },
        {
          "include": "#numeric-literals"
        },
        {
          "include": "#comments"
        },
        {
          "begin": "\\{",
          "end": "\\}",
          "contentName": "meta.tag.function-body.mank",
          "include": "#blocks"
        }
      ]
    },
    "pod-declaration": {
      "begin": "\\b(pod)\\s+([_$[:alpha:]][_$[:alnum:]]*)\\s*{",
      "beginCaptures": {
        "1": { "name": "constant.language.mank" },
        "2": { "name": "support.type.mank" }
      },
      "end": "\\}",
      "name":"meta.structure.pod.mank",
      "patterns": [
				{
          "include": "#custom-types"
        },
        {
          "include": "#lambda-types"
        },
        {
          "include": "#misc-ident"
        },
        {
          "include": "#comments"
        },
        {
          "include": "#strings"
        },
        {
          "include": "#numeric-literals"
        }
      ]
    },
    "keywords": {
			"patterns": [{
				"name": "keyword.control.mank",
				"match": "\\b(if|else|while|for|return|in|ref)\\b"
      }, {
        "name": "constant.language.mank",
        "match": "\\b(true|false)\\b"
      }]
		},
    "numeric-literals": {
      "name": "constant.numeric.mank",
      "match": "\\b([0-9]+(\\.[0-9]+)?)\\b"
    },
    "primitives": {
      "name": "constant.language.mank",
      "match": "\\b(i8|i16|i32|i64|u8|u16|u32|u64|bool|f32|f64|str)\\b"
    },
    "comments": {
      "match": "\\#.*$",
      "name": "comment.line.mank"
    },
    "call":{
      "match": "\\b([_$[:alpha:]][_$[:alnum:]]*(?:\\s*!)?)\\s*\\(",
      "captures": {
        "1": {"name": "meta.definition.function.js entity.name.function.js" }
      }
    },
    "custom-types": {
      "match": "\\:\\s*(?:(ref)\\s+)?(?:(?:(i8|i16|i32|i64|u8|u16|u32|u64|bool|f32|f64|str)|([_$[:alpha:]][_$[:alnum:]]*)))\\b",
      "captures": {
        "1": {"name": "keyword.control.mank" },
        "2": {"name": "constant.language.mank" },
        "3": {"name": "support.type.mank" }
      }
    },
    "misc-ident": {
      "match": "\\b([_$[:alpha:]][_$[:alnum:]]*)\\b",
      "captures": {
        "1": {"name": "support.type.property-name.mank" }
      }
    },
    "lambda-type": {
      "match": "\\b(?:(ref)\\s+)?(?:(?:(i8|i16|i32|i64|u8|u16|u32|u64|bool|f32|f64|str)|([_$[:alpha:]][_$[:alnum:]]*)))\\b",
      "captures": {
        "1": {"name": "keyword.control.mank" },
        "2": {"name": "constant.language.mank" },
        "3": {"name": "support.type.mank" }
      }
    },
    "typeless-lambda-param": {
      "match": "(?<=,|\\\\)([_$[:alpha:]][_$[:alnum:]]*)\\s*(?=,|->)",
      "captures": {
        "1": {"name": "support.type.property-name.mank" }
      }
    },
    "lambda-param": {
      "match": "\\b([_$[:alpha:]][_$[:alnum:]]*)\\s*:",
      "captures": {
        "1": {"name": "support.type.property-name.mank" }
      }
    },
    "lambda-types": {
      "begin": "(?<=:)\\s*\\\\",
      "end": "->\\s*(?:(ref)\\s+)?(?:(?:(i8|i16|i32|i64|u8|u16|u32|u64|bool|f32|f64|str)|([_$[:alpha:]][_$[:alnum:]]*)))\\b",
      "patterns": [
        {
          "include": "#lambda-param"
        },
        {
          "include": "#lambda-type"
        },
        {
          "include": "#numeric-literals"
        },
        {
          "include": "#comments"
        }
      ],
      "endCaptures": {
        "1": {"name": "keyword.control.mank" },
        "2": {"name": "constant.language.mank" },
        "3": {"name": "support.type.mank" }
      }
    },
    "lambda": {
      "begin": "\\\\",
      "end": "->(?:(?:\\s*(?:(ref)\\s+)?(?:(?:(i8|i16|i32|i64|u8|u16|u32|u64|bool|f32|f64|str)|(?:(ref)|([_$[:alpha:]][_$[:alnum:]]*))))\\b)|(?:\\s*{))",
      "patterns": [
        {
          "include": "#keywords"
        },
        {
          "include": "#typeless-lambda-param"
        },
        {
          "include": "#lambda-param"
        },
        {
          "include": "#lambda-type"
        },
        {
          "include": "#numeric-literals"
        },
        {
          "include": "#comments"
        }
      ],
      "endCaptures": {
        "1": {"name": "keyword.control.mank" },
        "2": {"name": "constant.language.mank" },
        "3": {"name": "keyword.control.mank"},
        "4": {"name": "support.type.mank" }
      }
    }
	},
	"scopeName": "source.mank"
}
